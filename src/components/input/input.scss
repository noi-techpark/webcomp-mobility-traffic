@import "../mixins";

// Input
// --------------------------------------------------

:host {
  /**
   * @prop --background: Background of the input
   *
   * @prop --color: Color of the input text
   *
   * @prop --padding-top: Top padding of the input
   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the input
   * @prop --padding-bottom: Bottom padding of the input
   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the input
   *
   * @prop --placeholder-color: Color of the input placeholder text
   * @prop --placeholder-font-style: Font style of the input placeholder text
   * @prop --placeholder-font-weight: Font weight of the input placeholder text
   * @prop --placeholder-opacity: Opacity of the input placeholder text
   */
  --clear-icon-bg-size: 22px;
  --clear-icon-width: 30px;
  --clear-icon-height: 30px;
  --clear-icon-svg: "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'><polygon fill='#eee' points='405,136.798 375.202,107 256,226.202 136.798,107 107,136.798 226.202,256 107,375.202 136.798,405 256,285.798 375.202,405 405,375.202 285.798,256'/></svg>";
  --placeholder-color: initial;
  --placeholder-font-style: initial;
  --placeholder-font-weight: initial;
  --placeholder-opacity: .5;
  --padding-top: 10px;
  --padding-end: 0;
  --padding-bottom: 10px;
  --padding-start: calc(var(--noi-item-padding-start, 16px) / 2);
  --background: transparent;
  --color: initial;
  
  font-size: inherit;

  display: flex;
  position: relative;

  flex: 1;
  align-items: center;

  width: 100%;

  /* stylelint-disable-next-line all */
  padding: 0 !important;

  background: var(--background);
  border-radius: var(--border-radius, 0);
  color: var(--color);
  font-family: var(--noi-font-family, var(--noi-font-family-default));

  z-index: 2;
}

:host-context(noi-item:not(.item-label)) {
  --padding-start: 0;
}


// Native Text Input
// --------------------------------------------------

.noi-input__native {
  @include padding(var(--padding-top), var(--padding-end), var(--padding-bottom), var(--padding-start));
  @include text-inherit();

  display: inline-block;

  flex: 1;

  width: 100%;
  max-width: 100%;
  max-height: 100%;

  border: 0;

  outline: none;

  background: transparent;

  box-sizing: border-box;
  appearance: none;

  &::placeholder {
    color: var(--placeholder-color);

    font-family: inherit;
    font-style: var(--placeholder-font-style);
    font-weight: var(--placeholder-font-weight);

    opacity: var(--placeholder-opacity);
  }

  &:-webkit-autofill {
    background-color: transparent;
  }

  &:invalid {
    box-shadow: none;
  }

  &::-ms-clear {
    display: none;
  }
}

.native-input[disabled] {
  opacity: .4;
}



// Input Cover: Unfocused
// --------------------------------------------------
// The input cover is the div that actually receives the
// tap/click event when scroll assist is configured to true.
// This make it so the native input element is not clickable.
// This will only show when the scroll assist is configured
// otherwise the .input-cover will not be rendered at all
// The input cover is not clickable when the input is disabled
.cloned-input {
  @include position(0, null, null, 0);

  position: absolute;

  pointer-events: none;
}


// Clear Input Icon
// --------------------------------------------------

.input-clear-icon {
  @include margin(0);
  @include padding(0);
  @include background-position(center);

  border: 0;

  outline: none;

  background-color: transparent;
  background-repeat: no-repeat;

  visibility: hidden;
  appearance: none;
}

.input-clear-icon:focus {
  opacity: 0.5;
}

:host(.has-value) .input-clear-icon {
  visibility: visible;
}


// Input Has focus
// --------------------------------------------------
// When the input has focus, then the input cover should be hidden

:host(.has-focus) {
  pointer-events: none;
}

:host(.has-focus) input,
:host(.has-focus) a,
:host(.has-focus) button {
  pointer-events: auto;
}

:host-context(.item-label-stacked),
:host-context(.item-label-floating) {
  --padding-top: 8px;
  --padding-bottom: 8px;
  --padding-start: 0;
}

.input-clear-icon {
  @include svg-background-image(var(--clear-icon-svg));
  width: var(--clear-icon-width);
  height: var(--clear-icon-height);
  background-size: var(--clear-icon-bg-size);
}
